<?xml version="1.0" encoding="utf-8"?>
<TcPlcObject Version="1.1.0.1" ProductVersion="3.1.4024.12">
  <POU Name="BackgroundComms" Id="{5ba1a423-949f-4635-8156-6130cb4d1e43}" SpecialFunc="None">
    <Declaration><![CDATA[PROGRAM BackgroundComms
VAR

	HubTXBuffer					:				ARRAY [0..2] OF ComBuffer;
	HubRXBuffer					:				ARRAY [0..2] OF ComBuffer;

	HubCommIn AT %I*			:				ARRAY [0..2] OF KL6inData22B;
	HubCommOut AT %Q*			:				ARRAY [0..2] OF KL6outData22B;

	HubSerialLineControl		:				ARRAY [0..2] OF SerialLineControl;

	i							:				INT;

	BlindCommandTable 			:		ARRAY [0..2] OF StructBlindControl := [(JogTimeInt:=3000)];

	StaffRoomTempDownButton		:		BOOL;
	StaffRoomTempUpButton		:		BOOL;
	StaffRoomTempDownButtonFlag	:		BOOL;
	StaffRoomTempUpButtonFlag	:		BOOL;
	ResetFlagTime 				: 		TON;

	BlindSelection				:		Selection;

	UseStaffRoomVisu 			: 		BOOL;

	Up:BOOL;
	Down:BOOL;

	rtBlindsBoardRoomUp					:		R_TRIG;
	rtBlindsBoardRoomDown				:		R_TRIG;
	rtBlindsBoardRoomStop				:		R_TRIG;


	rtBlindsOfficeAreaWall1_3				:		R_TRIG;
	rtBlindsOfficeAreaWall4_9				:		R_TRIG;
	rtBlindsOfficeAreaWall10_13			:		R_TRIG;

	rtBlindsOfficeAreaWallStop				:		R_TRIG;


	xBlindsOfficeAreaWall1_3Flag			:		BOOL;
	xBlindsOfficeAreaWall4_9Flag			:		BOOL;
	xBlindsOfficeAreaWall10_13Flag			:		BOOL;

	rtBlindsBoardRoomCP67Up			:		R_TRIG;
	rtBlindsBoardRoomCP67Down			:		R_TRIG;
	rtBlindsBoardRoomCP67Stop			:		R_TRIG;


	rtBoardRoom_PrivacyMode		:			R_TRIG;
	rtBoardRoom_SceneryMode		:			R_TRIG;
	rtBoardRoom_ProjectorMode		:			R_TRIG;
	rtBoardRoom_MeetingMode		:			R_TRIG;

	rtDeskArea_PrivacyMode			:			R_TRIG;
	rtDeskArea_SceneryMode			:			R_TRIG;
	rtDeskArea_NightMode			:			R_TRIG;
	rtDeskArea_MorningMode			:			R_TRIG;

	rtKitchenArea_PrivacyMode			:			R_TRIG;
	rtKitchenArea_SceneryMode		:			R_TRIG;
	rtKitchenArea_NightMode			:			R_TRIG;
	rtKitchenArea_MorningMode		:			R_TRIG;

	rtEntireBuilding_CleaningMode		:			R_TRIG;


END_VAR


VAR CONSTANT

	HubCount				:				INT := 2; (* Hub count starts at 0, setting 2 = 3 hubs *)

END_VAR]]></Declaration>
    <Implementation>
      <ST><![CDATA[(* Serial line control for Office Area *)
HubSerialLineControl[0](
	Mode:= SERIALLINEMODE_KL6_22B_STANDARD ,
	pComIn:= ADR( HubCommIn[0]),
	pComOut:= ADR( HubCommOut[0]),
	SizeComIn:=  SIZEOF(HubCommIn[0]),
	TxBuffer:= HubTXBuffer[0] ,
	RxBuffer:= HubRXBuffer[0] ,
	Error=> ,
	ErrorID=> );

(* Serial line control for Boardroom *)
HubSerialLineControl[1](
	Mode:= SERIALLINEMODE_KL6_22B_STANDARD ,
	pComIn:= ADR( HubCommIn[1]),
	pComOut:= ADR( HubCommOut[1]),
	SizeComIn:=  SIZEOF(HubCommIn[1]),
	TxBuffer:= HubTXBuffer[1] ,
	RxBuffer:= HubRXBuffer[1] ,
	Error=> ,
	ErrorID=> );

(*Serial line control for reception *)
HubSerialLineControl[2](
	Mode:= SERIALLINEMODE_KL6_22B_STANDARD ,
	pComIn:= ADR( HubCommIn[2]),
	pComOut:= ADR( HubCommOut[2]),
	SizeComIn:=  SIZEOF(HubCommIn[2]),
	TxBuffer:= HubTXBuffer[2] ,
	RxBuffer:= HubRXBuffer[2] ,
	Error=> ,
	ErrorID=> );

(* Check trigger for boardRoom blinds*)
rtBlindsBoardRoomDown(CLK:= PassADSBlindInfo[2].0 , Q=> );
IF rtBlindsBoardRoomDown.Q THEN
	SetBoardroomAreaBlindsAll();
	BlindCommandTable[1].xCommandDown := TRUE;
END_IF

rtBlindsBoardRoomUp(CLK:= PassADSBlindInfo[3].0 , Q=> );
IF rtBlindsBoardRoomUp.Q THEN
	SetBoardroomAreaBlindsAll();
	BlindCommandTable[1].xCommandUp := TRUE;
END_IF




	(*Boardroom Blind Modes***********************************************************************)
	
	(*Board Room Privacy Mode *)
	rtBoardRoom_PrivacyMode(CLK:= BoardRoom_PrivacyMode , Q=> );
	IF rtBoardRoom_PrivacyMode.Q THEN
		SetBoardRoomBlinds1_7();
		BlindCommandTable[1].xCommandDown := TRUE;
		BoardRoom_PrivacyMode	:= FALSE;
	END_IF
	
	(*Board Room Scenery Mode *)
	rtBoardRoom_SceneryMode(CLK:= BoardRoom_SceneryMode , Q=> );
	IF rtBoardRoom_SceneryMode.Q THEN
		SetBoardRoomBlinds8_16();
		BlindCommandTable[1].xCommandUp := TRUE;
		BoardRoom_SceneryMode	:= FALSE;
	END_IF
	
	(*Board Room Projector Mode *)
	rtBoardRoom_ProjectorMode(CLK:= BoardRoom_ProjectorMode , Q=> );
	IF rtBoardRoom_ProjectorMode.Q THEN
		SetBoardroomAreaBlindsAll();
		BlindCommandTable[1].xCommandDown := TRUE;
		BoardRoom_ProjectorMode	:= FALSE;
	END_IF
	
	(*Meeting Room  Mode *)
	rtBoardRoom_ProjectorMode(CLK:= BoardRoom_ProjectorMode , Q=> );
	IF rtBoardRoom_ProjectorMode.Q THEN
		SetBoardRoomBlinds1_7();
		BlindCommandTable[1].xCommandDown := TRUE;
		BoardRoom_ProjectorMode	:= FALSE;
	END_IF
	
	
	(*Desk Area Blind Modes***********************************************************************)
	
	(* Desk Area Privacy Mode*)
	rtDeskArea_PrivacyMode(CLK:= DeskArea_PrivacyMode OR PassADSBlindInfo[8].0  , Q=> );
	IF rtDeskArea_PrivacyMode.Q THEN
		SetOfficeAreaBlinds10_13();
		BlindCommandTable[0].xCommandDown := TRUE;
		DeskArea_PrivacyMode	:= FALSE;
	END_IF

	(* Desk Area Scenery Mode*)
	rtDeskArea_SceneryMode(CLK:= DeskArea_SceneryMode OR  PassADSBlindInfo[11].0  , Q=> );
	IF rtDeskArea_SceneryMode.Q THEN
		SetOfficeAreaBlinds4_9();
		BlindCommandTable[0].xCommandUp := TRUE;
		DeskArea_SceneryMode	:= FALSE;
	END_IF

	(* Desk Area Night Mode*)
	rtDeskArea_NightMode(CLK:= DeskArea_NightMode OR  PassADSBlindInfo[9].0 , Q=> );
	IF rtDeskArea_NightMode.Q THEN
		SetOfficeAreaBlinds1_9();
		BlindCommandTable[0].xCommandDown := TRUE;
		DeskArea_NightMode	:= FALSE;
	END_IF

	(* Desk Area Morning Mode*)
	rtDeskArea_MorningMode(CLK:= DeskArea_MorningMode OR  PassADSBlindInfo[10].0 , Q=> );
	IF rtDeskArea_MorningMode.Q THEN
		SetOfficeAreaBlinds1_3();
		BlindCommandTable[0].xCommandDown := TRUE;
		DeskArea_MorningMode	:= FALSE;
	END_IF

	(*Kitchen Area Blind Modes***********************************************************************)
	
	(* Kitchen Area Privacy Mode*)
	rtKitchenArea_PrivacyMode(CLK:= KitchenArea_PrivacyMode , Q=> );
	IF rtKitchenArea_PrivacyMode.Q THEN
		SetOfficeAreaBlinds10_13();
		SetBoardRoomBlinds1_7();
		BlindCommandTable[0].xCommandDown := TRUE;
		BlindCommandTable[1].xCommandDown := TRUE;
		KitchenArea_PrivacyMode	:= FALSE;
	END_IF








(*Check triggers of enocean switch for office area wall 1
rtBlindsOfficeAreaWall1_3(CLK:= PassADSBlindInfo[8].0 , Q=> );
IF rtBlindsOfficeAreaWall1_3.Q AND xBlindsOfficeAreaWall1_3Flag  THEN
	SetOfficeAreaBlinds1_3();
	BlindCommandTable[0].xCommandDown := TRUE;
	xBlindsOfficeAreaWall1_3Flag := FALSE;
ELSIF  rtBlindsOfficeAreaWall1_3.Q AND NOT xBlindsOfficeAreaWall1_3Flag  THEN
	SetOfficeAreaBlinds1_3();
	BlindCommandTable[0].xCommandUp := TRUE;
	xBlindsOfficeAreaWall1_3Flag := TRUE;
END_IF

(*Check triggers of enocean switch for office area wall 2*)
rtBlindsOfficeAreaWall4_9(CLK:= PassADSBlindInfo[9].0 , Q=> );
IF rtBlindsOfficeAreaWall4_9.Q AND xBlindsOfficeAreaWall4_9Flag  THEN
	SetOfficeAreaBlinds4_9();
	BlindCommandTable[0].xCommandDown := TRUE;
	xBlindsOfficeAreaWall4_9Flag := FALSE;
ELSIF  rtBlindsOfficeAreaWall4_9.Q AND NOT xBlindsOfficeAreaWall4_9Flag  THEN
	SetOfficeAreaBlinds4_9();
	BlindCommandTable[0].xCommandUp := TRUE;
	xBlindsOfficeAreaWall4_9Flag := TRUE;
END_IF

(*Check triggers of enocean switch for office area wall 3*)
rtBlindsOfficeAreaWall10_13(CLK:= PassADSBlindInfo[10].0 , Q=> );
IF rtBlindsOfficeAreaWall10_13.Q AND xBlindsOfficeAreaWall10_13Flag  THEN
	SetOfficeAreaBlinds10_13();
	BlindCommandTable[0].xCommandDown := TRUE;
	xBlindsOfficeAreaWall10_13Flag := FALSE;
ELSIF  rtBlindsOfficeAreaWall10_13.Q AND NOT xBlindsOfficeAreaWall10_13Flag  THEN
	SetOfficeAreaBlinds10_13();
	BlindCommandTable[0].xCommandUp := TRUE;
	xBlindsOfficeAreaWall10_13Flag := TRUE;
END_IF


(*Stop*)
rtBlindsOfficeAreaWallStop(CLK:= PassADSBlindInfo[11].0 , Q=> );
IF rtBlindsOfficeAreaWallStop.Q  THEN
	SetOfficeAreaBlindsAll();
	BlindCommandTable[0].xCommandStop := TRUE;
END_IF*)


(* Blind Control from CP67 inputs received via ADS*)

rtBlindsBoardRoomCP67Up(CLK := BYTE_TO_BOOL(PassADSBlindControlCP67[49]));
IF rtBlindsBoardRoomCP67Up.Q THEN

	BlindCommandTable[1].SelectBlindsBulkCommand[1] :=  BYTE_TO_BOOL(PassADSBlindControlCP67[1]);
	BlindCommandTable[1].SelectBlindsBulkCommand[2] :=  BYTE_TO_BOOL(PassADSBlindControlCP67[2]);
	BlindCommandTable[1].SelectBlindsBulkCommand[3] :=  BYTE_TO_BOOL(PassADSBlindControlCP67[3]);
	BlindCommandTable[1].SelectBlindsBulkCommand[4] :=  BYTE_TO_BOOL(PassADSBlindControlCP67[4]);
	BlindCommandTable[1].SelectBlindsBulkCommand[5] :=  BYTE_TO_BOOL(PassADSBlindControlCP67[5]);
	BlindCommandTable[1].SelectBlindsBulkCommand[6] :=  BYTE_TO_BOOL(PassADSBlindControlCP67[6]);
	BlindCommandTable[1].SelectBlindsBulkCommand[7] :=  BYTE_TO_BOOL(PassADSBlindControlCP67[7]);
	BlindCommandTable[1].SelectBlindsBulkCommand[8] :=  BYTE_TO_BOOL(PassADSBlindControlCP67[8]);
	BlindCommandTable[1].SelectBlindsBulkCommand[9] :=  BYTE_TO_BOOL(PassADSBlindControlCP67[9]);
	BlindCommandTable[1].SelectBlindsBulkCommand[10] :=  BYTE_TO_BOOL(PassADSBlindControlCP67[10]);
	BlindCommandTable[1].SelectBlindsBulkCommand[11] :=  BYTE_TO_BOOL(PassADSBlindControlCP67[11]);
	BlindCommandTable[1].SelectBlindsBulkCommand[12] :=  BYTE_TO_BOOL(PassADSBlindControlCP67[12]);
	BlindCommandTable[1].SelectBlindsBulkCommand[13] :=  BYTE_TO_BOOL(PassADSBlindControlCP67[13]);
	BlindCommandTable[1].SelectBlindsBulkCommand[14] :=  BYTE_TO_BOOL(PassADSBlindControlCP67[14]);
	BlindCommandTable[1].SelectBlindsBulkCommand[15] :=  BYTE_TO_BOOL(PassADSBlindControlCP67[15]);
	BlindCommandTable[1].SelectBlindsBulkCommand[16] :=  BYTE_TO_BOOL(PassADSBlindControlCP67[16]);

	BlindCommandTable[1].xCommandUp := TRUE;

END_IF

rtBlindsBoardRoomCP67Down(CLK := BYTE_TO_BOOL(PassADSBlindControlCP67[50]));
IF rtBlindsBoardRoomCP67Down.Q THEN

	BlindCommandTable[1].SelectBlindsBulkCommand[1] :=  BYTE_TO_BOOL(PassADSBlindControlCP67[1]);
	BlindCommandTable[1].SelectBlindsBulkCommand[2] :=  BYTE_TO_BOOL(PassADSBlindControlCP67[2]);
	BlindCommandTable[1].SelectBlindsBulkCommand[3] :=  BYTE_TO_BOOL(PassADSBlindControlCP67[3]);
	BlindCommandTable[1].SelectBlindsBulkCommand[4] :=  BYTE_TO_BOOL(PassADSBlindControlCP67[4]);
	BlindCommandTable[1].SelectBlindsBulkCommand[5] :=  BYTE_TO_BOOL(PassADSBlindControlCP67[5]);
	BlindCommandTable[1].SelectBlindsBulkCommand[6] :=  BYTE_TO_BOOL(PassADSBlindControlCP67[6]);
	BlindCommandTable[1].SelectBlindsBulkCommand[7] :=  BYTE_TO_BOOL(PassADSBlindControlCP67[7]);
	BlindCommandTable[1].SelectBlindsBulkCommand[8] :=  BYTE_TO_BOOL(PassADSBlindControlCP67[8]);
	BlindCommandTable[1].SelectBlindsBulkCommand[9] :=  BYTE_TO_BOOL(PassADSBlindControlCP67[9]);
	BlindCommandTable[1].SelectBlindsBulkCommand[10] :=  BYTE_TO_BOOL(PassADSBlindControlCP67[10]);
	BlindCommandTable[1].SelectBlindsBulkCommand[11] :=  BYTE_TO_BOOL(PassADSBlindControlCP67[11]);
	BlindCommandTable[1].SelectBlindsBulkCommand[12] :=  BYTE_TO_BOOL(PassADSBlindControlCP67[12]);
	BlindCommandTable[1].SelectBlindsBulkCommand[13] :=  BYTE_TO_BOOL(PassADSBlindControlCP67[13]);
	BlindCommandTable[1].SelectBlindsBulkCommand[14] :=  BYTE_TO_BOOL(PassADSBlindControlCP67[14]);
	BlindCommandTable[1].SelectBlindsBulkCommand[15] :=  BYTE_TO_BOOL(PassADSBlindControlCP67[15]);
	BlindCommandTable[1].SelectBlindsBulkCommand[16] :=  BYTE_TO_BOOL(PassADSBlindControlCP67[16]);


	BlindCommandTable[1].xCommandDown := TRUE;

END_IF

rtBlindsBoardRoomCP67Stop(CLK := BYTE_TO_BOOL(PassADSBlindControlCP67[51]));
IF rtBlindsBoardRoomCP67Stop.Q THEN

	BlindCommandTable[1].SelectBlindsBulkCommand[1] :=  BYTE_TO_BOOL(PassADSBlindControlCP67[1]);
	BlindCommandTable[1].SelectBlindsBulkCommand[2] :=  BYTE_TO_BOOL(PassADSBlindControlCP67[2]);
	BlindCommandTable[1].SelectBlindsBulkCommand[3] :=  BYTE_TO_BOOL(PassADSBlindControlCP67[3]);
	BlindCommandTable[1].SelectBlindsBulkCommand[4] :=  BYTE_TO_BOOL(PassADSBlindControlCP67[4]);
	BlindCommandTable[1].SelectBlindsBulkCommand[5] :=  BYTE_TO_BOOL(PassADSBlindControlCP67[5]);
	BlindCommandTable[1].SelectBlindsBulkCommand[6] :=  BYTE_TO_BOOL(PassADSBlindControlCP67[6]);
	BlindCommandTable[1].SelectBlindsBulkCommand[7] :=  BYTE_TO_BOOL(PassADSBlindControlCP67[7]);
	BlindCommandTable[1].SelectBlindsBulkCommand[8] :=  BYTE_TO_BOOL(PassADSBlindControlCP67[8]);
	BlindCommandTable[1].SelectBlindsBulkCommand[9] :=  BYTE_TO_BOOL(PassADSBlindControlCP67[9]);
	BlindCommandTable[1].SelectBlindsBulkCommand[10] :=  BYTE_TO_BOOL(PassADSBlindControlCP67[10]);
	BlindCommandTable[1].SelectBlindsBulkCommand[11] :=  BYTE_TO_BOOL(PassADSBlindControlCP67[11]);
	BlindCommandTable[1].SelectBlindsBulkCommand[12] :=  BYTE_TO_BOOL(PassADSBlindControlCP67[12]);
	BlindCommandTable[1].SelectBlindsBulkCommand[13] :=  BYTE_TO_BOOL(PassADSBlindControlCP67[13]);
	BlindCommandTable[1].SelectBlindsBulkCommand[14] :=  BYTE_TO_BOOL(PassADSBlindControlCP67[14]);
	BlindCommandTable[1].SelectBlindsBulkCommand[15] :=  BYTE_TO_BOOL(PassADSBlindControlCP67[15]);
	BlindCommandTable[1].SelectBlindsBulkCommand[16] :=  BYTE_TO_BOOL(PassADSBlindControlCP67[16]);



	BlindCommandTable[1].xCommandStop := TRUE;

END_IF







]]></ST>
    </Implementation>
    <Action Name="SetBoardroomAreaBlindsAll" Id="{c1b88590-9603-44cc-a7de-ee06d2fec012}">
      <Implementation>
        <ST><![CDATA[BlindCommandTable[1].SelectBlindsBulkCommand[1] :=TRUE;
BlindCommandTable[1].SelectBlindsBulkCommand[2] := TRUE;
BlindCommandTable[1].SelectBlindsBulkCommand[3] := TRUE;
BlindCommandTable[1].SelectBlindsBulkCommand[4] := TRUE;
BlindCommandTable[1].SelectBlindsBulkCommand[5] := TRUE;
BlindCommandTable[1].SelectBlindsBulkCommand[6] := TRUE;
BlindCommandTable[1].SelectBlindsBulkCommand[7] := TRUE;
BlindCommandTable[1].SelectBlindsBulkCommand[8] := TRUE;
BlindCommandTable[1].SelectBlindsBulkCommand[9] := TRUE;
BlindCommandTable[1].SelectBlindsBulkCommand[10] := TRUE;
BlindCommandTable[1].SelectBlindsBulkCommand[11] := TRUE;
BlindCommandTable[1].SelectBlindsBulkCommand[12] := TRUE;
BlindCommandTable[1].SelectBlindsBulkCommand[13] := TRUE;
BlindCommandTable[1].SelectBlindsBulkCommand[14] := TRUE;
BlindCommandTable[1].SelectBlindsBulkCommand[15] := TRUE;
BlindCommandTable[1].SelectBlindsBulkCommand[16] := TRUE;]]></ST>
      </Implementation>
    </Action>
    <Action Name="SetBoardRoomBlinds1_7" Id="{26c73eee-fabf-42f3-aed3-3d832ca09101}">
      <Implementation>
        <ST><![CDATA[BlindCommandTable[1].SelectBlindsBulkCommand[1] :=TRUE;
BlindCommandTable[1].SelectBlindsBulkCommand[2] := TRUE;
BlindCommandTable[1].SelectBlindsBulkCommand[3] := TRUE;
BlindCommandTable[1].SelectBlindsBulkCommand[4] := TRUE;
BlindCommandTable[1].SelectBlindsBulkCommand[5] := TRUE;
BlindCommandTable[1].SelectBlindsBulkCommand[6] := TRUE;
BlindCommandTable[1].SelectBlindsBulkCommand[7] := TRUE;
BlindCommandTable[1].SelectBlindsBulkCommand[8] := FALSE;
BlindCommandTable[1].SelectBlindsBulkCommand[9] := FALSE;
BlindCommandTable[1].SelectBlindsBulkCommand[10] := FALSE;
BlindCommandTable[1].SelectBlindsBulkCommand[11] := FALSE;
BlindCommandTable[1].SelectBlindsBulkCommand[12] := FALSE;
BlindCommandTable[1].SelectBlindsBulkCommand[13] := FALSE;
BlindCommandTable[1].SelectBlindsBulkCommand[14] := FALSE;
BlindCommandTable[1].SelectBlindsBulkCommand[15] := FALSE;
BlindCommandTable[1].SelectBlindsBulkCommand[16] := FALSE;]]></ST>
      </Implementation>
    </Action>
    <Action Name="SetBoardRoomBlinds8_16" Id="{b155812a-6acc-4eca-9e58-280c15029748}">
      <Implementation>
        <ST><![CDATA[BlindCommandTable[1].SelectBlindsBulkCommand[1] :=FALSE;
BlindCommandTable[1].SelectBlindsBulkCommand[2] := FALSE;
BlindCommandTable[1].SelectBlindsBulkCommand[3] := FALSE;
BlindCommandTable[1].SelectBlindsBulkCommand[4] := FALSE;
BlindCommandTable[1].SelectBlindsBulkCommand[5] := FALSE;
BlindCommandTable[1].SelectBlindsBulkCommand[6] := FALSE;
BlindCommandTable[1].SelectBlindsBulkCommand[7] := FALSE;
BlindCommandTable[1].SelectBlindsBulkCommand[8] := TRUE;
BlindCommandTable[1].SelectBlindsBulkCommand[9] := TRUE;
BlindCommandTable[1].SelectBlindsBulkCommand[10] := TRUE;
BlindCommandTable[1].SelectBlindsBulkCommand[11] := TRUE;
BlindCommandTable[1].SelectBlindsBulkCommand[12] := TRUE;
BlindCommandTable[1].SelectBlindsBulkCommand[13] := TRUE;
BlindCommandTable[1].SelectBlindsBulkCommand[14] := TRUE;
BlindCommandTable[1].SelectBlindsBulkCommand[15] := TRUE;
BlindCommandTable[1].SelectBlindsBulkCommand[16] := TRUE;]]></ST>
      </Implementation>
    </Action>
    <Action Name="SetOfficeAreaBlinds1_3" Id="{9de6c562-f932-41b5-bc96-13a917d982e2}">
      <Implementation>
        <ST><![CDATA[BlindCommandTable[0].SelectBlindsBulkCommand[1] :=TRUE;
BlindCommandTable[0].SelectBlindsBulkCommand[2] := TRUE;
BlindCommandTable[0].SelectBlindsBulkCommand[3] := TRUE;
BlindCommandTable[0].SelectBlindsBulkCommand[4] := FALSE;
BlindCommandTable[0].SelectBlindsBulkCommand[5] := FALSE;
BlindCommandTable[0].SelectBlindsBulkCommand[6] := FALSE;
BlindCommandTable[0].SelectBlindsBulkCommand[7] := FALSE;
BlindCommandTable[0].SelectBlindsBulkCommand[8] := FALSE;
BlindCommandTable[0].SelectBlindsBulkCommand[9] := FALSE;
BlindCommandTable[0].SelectBlindsBulkCommand[10] := FALSE;
BlindCommandTable[0].SelectBlindsBulkCommand[11] := FALSE;
BlindCommandTable[0].SelectBlindsBulkCommand[12] := FALSE;
BlindCommandTable[0].SelectBlindsBulkCommand[13] := FALSE;
BlindCommandTable[0].SelectBlindsBulkCommand[14] := FALSE;
BlindCommandTable[0].SelectBlindsBulkCommand[15] := FALSE;
BlindCommandTable[0].SelectBlindsBulkCommand[16] := FALSE;]]></ST>
      </Implementation>
    </Action>
    <Action Name="SetOfficeAreaBlinds1_9" Id="{2a155af5-7235-45ba-9ba9-33f356fc9d0b}">
      <Implementation>
        <ST><![CDATA[BlindCommandTable[0].SelectBlindsBulkCommand[1] :=TRUE;
BlindCommandTable[0].SelectBlindsBulkCommand[2] := TRUE;
BlindCommandTable[0].SelectBlindsBulkCommand[3] := TRUE;
BlindCommandTable[0].SelectBlindsBulkCommand[4] := TRUE;
BlindCommandTable[0].SelectBlindsBulkCommand[5] := TRUE;
BlindCommandTable[0].SelectBlindsBulkCommand[6] := TRUE;
BlindCommandTable[0].SelectBlindsBulkCommand[7] := TRUE;
BlindCommandTable[0].SelectBlindsBulkCommand[8] := TRUE;
BlindCommandTable[0].SelectBlindsBulkCommand[9] := TRUE;
BlindCommandTable[0].SelectBlindsBulkCommand[10] := FALSE;
BlindCommandTable[0].SelectBlindsBulkCommand[11] := FALSE;
BlindCommandTable[0].SelectBlindsBulkCommand[12] := FALSE;
BlindCommandTable[0].SelectBlindsBulkCommand[13] := FALSE;
BlindCommandTable[0].SelectBlindsBulkCommand[14] := FALSE;
BlindCommandTable[0].SelectBlindsBulkCommand[15] := FALSE;
BlindCommandTable[0].SelectBlindsBulkCommand[16] := FALSE;]]></ST>
      </Implementation>
    </Action>
    <Action Name="SetOfficeAreaBlinds10_13" Id="{cb618f19-a89e-46c9-8ac1-f4c8682514ef}">
      <Implementation>
        <ST><![CDATA[BlindCommandTable[0].SelectBlindsBulkCommand[1] :=FALSE;
BlindCommandTable[0].SelectBlindsBulkCommand[2] := FALSE;
BlindCommandTable[0].SelectBlindsBulkCommand[3] := FALSE;
BlindCommandTable[0].SelectBlindsBulkCommand[4] := FALSE;
BlindCommandTable[0].SelectBlindsBulkCommand[5] := FALSE;
BlindCommandTable[0].SelectBlindsBulkCommand[6] := FALSE;
BlindCommandTable[0].SelectBlindsBulkCommand[7] := FALSE;
BlindCommandTable[0].SelectBlindsBulkCommand[8] := FALSE;
BlindCommandTable[0].SelectBlindsBulkCommand[9] := FALSE;
BlindCommandTable[0].SelectBlindsBulkCommand[10] := TRUE;
BlindCommandTable[0].SelectBlindsBulkCommand[11] := TRUE;
BlindCommandTable[0].SelectBlindsBulkCommand[12] := TRUE;
BlindCommandTable[0].SelectBlindsBulkCommand[13] := TRUE;
BlindCommandTable[0].SelectBlindsBulkCommand[14] := TRUE;
BlindCommandTable[0].SelectBlindsBulkCommand[15] := TRUE;
BlindCommandTable[0].SelectBlindsBulkCommand[16] := TRUE;]]></ST>
      </Implementation>
    </Action>
    <Action Name="SetOfficeAreaBlinds4_9" Id="{2cbcdacb-795f-4c17-8ddf-a63f032aa642}">
      <Implementation>
        <ST><![CDATA[BlindCommandTable[0].SelectBlindsBulkCommand[1] :=FALSE;
BlindCommandTable[0].SelectBlindsBulkCommand[2] := FALSE;
BlindCommandTable[0].SelectBlindsBulkCommand[3] := FALSE;
BlindCommandTable[0].SelectBlindsBulkCommand[4] := TRUE;
BlindCommandTable[0].SelectBlindsBulkCommand[5] := TRUE;
BlindCommandTable[0].SelectBlindsBulkCommand[6] := TRUE;
BlindCommandTable[0].SelectBlindsBulkCommand[7] := TRUE;
BlindCommandTable[0].SelectBlindsBulkCommand[8] := TRUE;
BlindCommandTable[0].SelectBlindsBulkCommand[9] := TRUE;
BlindCommandTable[0].SelectBlindsBulkCommand[10] := FALSE;
BlindCommandTable[0].SelectBlindsBulkCommand[11] := FALSE;
BlindCommandTable[0].SelectBlindsBulkCommand[12] := FALSE;
BlindCommandTable[0].SelectBlindsBulkCommand[13] := FALSE;
BlindCommandTable[0].SelectBlindsBulkCommand[14] := FALSE;
BlindCommandTable[0].SelectBlindsBulkCommand[15] := FALSE;
BlindCommandTable[0].SelectBlindsBulkCommand[16] := FALSE;]]></ST>
      </Implementation>
    </Action>
    <Action Name="SetOfficeAreaBlindsAll" Id="{9f3ed10d-9379-4f63-8fab-874a808f919d}">
      <Implementation>
        <ST><![CDATA[BlindCommandTable[0].SelectBlindsBulkCommand[1] :=TRUE;
BlindCommandTable[0].SelectBlindsBulkCommand[2] := TRUE;
BlindCommandTable[0].SelectBlindsBulkCommand[3] := TRUE;
BlindCommandTable[0].SelectBlindsBulkCommand[4] := TRUE;
BlindCommandTable[0].SelectBlindsBulkCommand[5] := TRUE;
BlindCommandTable[0].SelectBlindsBulkCommand[6] := TRUE;
BlindCommandTable[0].SelectBlindsBulkCommand[7] := TRUE;
BlindCommandTable[0].SelectBlindsBulkCommand[8] := TRUE;
BlindCommandTable[0].SelectBlindsBulkCommand[9] := TRUE;
BlindCommandTable[0].SelectBlindsBulkCommand[10] := TRUE;
BlindCommandTable[0].SelectBlindsBulkCommand[11] := TRUE;
BlindCommandTable[0].SelectBlindsBulkCommand[12] := TRUE;
BlindCommandTable[0].SelectBlindsBulkCommand[13] := TRUE;
BlindCommandTable[0].SelectBlindsBulkCommand[14] := TRUE;
BlindCommandTable[0].SelectBlindsBulkCommand[15] := TRUE;
BlindCommandTable[0].SelectBlindsBulkCommand[16] := TRUE;]]></ST>
      </Implementation>
    </Action>
    <LineIds Name="BackgroundComms">
      <LineId Id="75" Count="265" />
    </LineIds>
    <LineIds Name="BackgroundComms.SetBoardroomAreaBlindsAll">
      <LineId Id="0" Count="15" />
    </LineIds>
    <LineIds Name="BackgroundComms.SetBoardRoomBlinds1_7">
      <LineId Id="0" Count="15" />
    </LineIds>
    <LineIds Name="BackgroundComms.SetBoardRoomBlinds8_16">
      <LineId Id="0" Count="15" />
    </LineIds>
    <LineIds Name="BackgroundComms.SetOfficeAreaBlinds1_3">
      <LineId Id="0" Count="15" />
    </LineIds>
    <LineIds Name="BackgroundComms.SetOfficeAreaBlinds1_9">
      <LineId Id="0" Count="15" />
    </LineIds>
    <LineIds Name="BackgroundComms.SetOfficeAreaBlinds10_13">
      <LineId Id="0" Count="15" />
    </LineIds>
    <LineIds Name="BackgroundComms.SetOfficeAreaBlinds4_9">
      <LineId Id="0" Count="15" />
    </LineIds>
    <LineIds Name="BackgroundComms.SetOfficeAreaBlindsAll">
      <LineId Id="0" Count="15" />
    </LineIds>
  </POU>
</TcPlcObject>